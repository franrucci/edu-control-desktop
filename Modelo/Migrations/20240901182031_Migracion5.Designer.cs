// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Modelo;

#nullable disable

namespace Modelo.Migrations
{
    [DbContext(typeof(SistemaColegio))]
    [Migration("20240901182031_Migracion5")]
    partial class Migracion5
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entidades.Asistencia", b =>
                {
                    b.Property<int>("AsistenciaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AsistenciaId"));

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("LibroDeAsistenciasId")
                        .HasColumnType("int");

                    b.Property<int>("NumTrimestre")
                        .HasColumnType("int");

                    b.Property<int>("TipoDeAsistenciaId")
                        .HasColumnType("int");

                    b.HasKey("AsistenciaId");

                    b.HasIndex("LibroDeAsistenciasId");

                    b.HasIndex("TipoDeAsistenciaId");

                    b.ToTable("Asistencias");
                });

            modelBuilder.Entity("Entidades.Boletin", b =>
                {
                    b.Property<int>("BoletinId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BoletinId"));

                    b.Property<int>("Año")
                        .HasColumnType("int");

                    b.Property<int>("EstadoFinalId")
                        .HasColumnType("int");

                    b.Property<int>("LibroDeAsistenciasId")
                        .HasColumnType("int");

                    b.Property<int>("LibroDeNotasId")
                        .HasColumnType("int");

                    b.Property<string>("ObservacionTrimestre1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ObservacionTrimestre2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ObservacionTrimestre3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonaId")
                        .HasColumnType("int");

                    b.Property<decimal>("PromedioTrimestre1")
                        .HasColumnType("decimal(4, 1)");

                    b.Property<decimal>("PromedioTrimestre2")
                        .HasColumnType("decimal(4, 1)");

                    b.Property<decimal>("PromedioTrimestre3")
                        .HasColumnType("decimal(4, 1)");

                    b.Property<int>("numGrado")
                        .HasColumnType("int");

                    b.HasKey("BoletinId");

                    b.HasIndex("EstadoFinalId");

                    b.HasIndex("PersonaId");

                    b.ToTable("Boletines");
                });

            modelBuilder.Entity("Entidades.CicloAcademico", b =>
                {
                    b.Property<int>("CicloAcademicoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CicloAcademicoId"));

                    b.Property<int>("Año")
                        .HasColumnType("int");

                    b.HasKey("CicloAcademicoId");

                    b.ToTable("CiclosAcademicos");
                });

            modelBuilder.Entity("Entidades.EstadoFinal", b =>
                {
                    b.Property<int>("EstadoFinalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EstadoFinalId"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EstadoFinalId");

                    b.ToTable("EstadosFinales");

                    b.HasData(
                        new
                        {
                            EstadoFinalId = 1,
                            Codigo = "A01",
                            Nombre = "Aprobado"
                        },
                        new
                        {
                            EstadoFinalId = 2,
                            Codigo = "A02",
                            Nombre = "Reprobado"
                        },
                        new
                        {
                            EstadoFinalId = 3,
                            Codigo = "A03",
                            Nombre = "Mes de recuperación"
                        });
                });

            modelBuilder.Entity("Entidades.Examen", b =>
                {
                    b.Property<int>("ExamenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExamenId"));

                    b.Property<int>("LibroDeNotasId")
                        .HasColumnType("int");

                    b.Property<int>("MateriaId")
                        .HasColumnType("int");

                    b.Property<decimal>("Nota")
                        .HasColumnType("decimal(4, 1)");

                    b.Property<int>("NumTrimestre")
                        .HasColumnType("int");

                    b.Property<int>("TipoDeExamenId")
                        .HasColumnType("int");

                    b.HasKey("ExamenId");

                    b.HasIndex("LibroDeNotasId");

                    b.HasIndex("MateriaId");

                    b.HasIndex("TipoDeExamenId");

                    b.ToTable("Examenes");
                });

            modelBuilder.Entity("Entidades.GradoAcademico", b =>
                {
                    b.Property<int>("GradoAcademicoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GradoAcademicoId"));

                    b.Property<int>("CantDeMaterias")
                        .HasColumnType("int");

                    b.Property<int>("NumGrado")
                        .HasColumnType("int");

                    b.Property<int>("TipoDeCicloId")
                        .HasColumnType("int");

                    b.HasKey("GradoAcademicoId");

                    b.HasIndex("TipoDeCicloId");

                    b.ToTable("GradosAcademicos");

                    b.HasData(
                        new
                        {
                            GradoAcademicoId = 1,
                            CantDeMaterias = 8,
                            NumGrado = 1,
                            TipoDeCicloId = 1
                        },
                        new
                        {
                            GradoAcademicoId = 2,
                            CantDeMaterias = 10,
                            NumGrado = 2,
                            TipoDeCicloId = 1
                        },
                        new
                        {
                            GradoAcademicoId = 3,
                            CantDeMaterias = 10,
                            NumGrado = 3,
                            TipoDeCicloId = 1
                        },
                        new
                        {
                            GradoAcademicoId = 4,
                            CantDeMaterias = 11,
                            NumGrado = 4,
                            TipoDeCicloId = 2
                        },
                        new
                        {
                            GradoAcademicoId = 5,
                            CantDeMaterias = 11,
                            NumGrado = 5,
                            TipoDeCicloId = 2
                        },
                        new
                        {
                            GradoAcademicoId = 6,
                            CantDeMaterias = 10,
                            NumGrado = 6,
                            TipoDeCicloId = 2
                        });
                });

            modelBuilder.Entity("Entidades.LibroDeAsistencias", b =>
                {
                    b.Property<int>("LibroDeAsistenciasId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LibroDeAsistenciasId"));

                    b.Property<int>("BoletinId")
                        .HasColumnType("int");

                    b.HasKey("LibroDeAsistenciasId");

                    b.HasIndex("BoletinId")
                        .IsUnique();

                    b.ToTable("LibrosDeAsistencias");
                });

            modelBuilder.Entity("Entidades.LibroDeNotas", b =>
                {
                    b.Property<int>("LibroDeNotasId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LibroDeNotasId"));

                    b.Property<int>("BoletinId")
                        .HasColumnType("int");

                    b.HasKey("LibroDeNotasId");

                    b.HasIndex("BoletinId")
                        .IsUnique();

                    b.ToTable("LibrosDeNotas");
                });

            modelBuilder.Entity("Entidades.Materia", b =>
                {
                    b.Property<int>("MateriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MateriaId"));

                    b.Property<string>("CodigoMateria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GradoAcademicoId")
                        .HasColumnType("int");

                    b.Property<string>("NombreMateria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MateriaId");

                    b.HasIndex("GradoAcademicoId");

                    b.ToTable("Materias");

                    b.HasData(
                        new
                        {
                            MateriaId = 1,
                            CodigoMateria = "A01",
                            GradoAcademicoId = 1,
                            NombreMateria = "Ciencias Naturales"
                        },
                        new
                        {
                            MateriaId = 2,
                            CodigoMateria = "A02",
                            GradoAcademicoId = 1,
                            NombreMateria = "Ciencias Sociales"
                        },
                        new
                        {
                            MateriaId = 3,
                            CodigoMateria = "A03",
                            GradoAcademicoId = 1,
                            NombreMateria = "Educación Artística"
                        },
                        new
                        {
                            MateriaId = 4,
                            CodigoMateria = "A04",
                            GradoAcademicoId = 1,
                            NombreMateria = "Educación Física"
                        },
                        new
                        {
                            MateriaId = 5,
                            CodigoMateria = "A05",
                            GradoAcademicoId = 1,
                            NombreMateria = "Inglés"
                        },
                        new
                        {
                            MateriaId = 6,
                            CodigoMateria = "A06",
                            GradoAcademicoId = 1,
                            NombreMateria = "Matemática"
                        },
                        new
                        {
                            MateriaId = 7,
                            CodigoMateria = "A07",
                            GradoAcademicoId = 1,
                            NombreMateria = "Prácticas del Lenguaje"
                        },
                        new
                        {
                            MateriaId = 8,
                            CodigoMateria = "A08",
                            GradoAcademicoId = 1,
                            NombreMateria = "Construcción de Ciudadanía"
                        },
                        new
                        {
                            MateriaId = 9,
                            CodigoMateria = "B01",
                            GradoAcademicoId = 2,
                            NombreMateria = "Biología"
                        },
                        new
                        {
                            MateriaId = 10,
                            CodigoMateria = "B02",
                            GradoAcademicoId = 2,
                            NombreMateria = "Construcción de Ciudadanía"
                        },
                        new
                        {
                            MateriaId = 11,
                            CodigoMateria = "B03",
                            GradoAcademicoId = 2,
                            NombreMateria = "Educación Artística"
                        },
                        new
                        {
                            MateriaId = 12,
                            CodigoMateria = "B04",
                            GradoAcademicoId = 2,
                            NombreMateria = "Educación Física"
                        },
                        new
                        {
                            MateriaId = 13,
                            CodigoMateria = "B05",
                            GradoAcademicoId = 2,
                            NombreMateria = "Físico Química"
                        },
                        new
                        {
                            MateriaId = 14,
                            CodigoMateria = "B06",
                            GradoAcademicoId = 2,
                            NombreMateria = "Geografía"
                        },
                        new
                        {
                            MateriaId = 15,
                            CodigoMateria = "B07",
                            GradoAcademicoId = 2,
                            NombreMateria = "Historia"
                        },
                        new
                        {
                            MateriaId = 16,
                            CodigoMateria = "B08",
                            GradoAcademicoId = 2,
                            NombreMateria = "Inglés"
                        },
                        new
                        {
                            MateriaId = 17,
                            CodigoMateria = "B09",
                            GradoAcademicoId = 2,
                            NombreMateria = "Matemática"
                        },
                        new
                        {
                            MateriaId = 18,
                            CodigoMateria = "B10",
                            GradoAcademicoId = 2,
                            NombreMateria = "Prácticas del Lenguaje"
                        },
                        new
                        {
                            MateriaId = 19,
                            CodigoMateria = "C01",
                            GradoAcademicoId = 3,
                            NombreMateria = "Biología"
                        },
                        new
                        {
                            MateriaId = 20,
                            CodigoMateria = "C02",
                            GradoAcademicoId = 3,
                            NombreMateria = "Construcción de Ciudadanía"
                        },
                        new
                        {
                            MateriaId = 21,
                            CodigoMateria = "C03",
                            GradoAcademicoId = 3,
                            NombreMateria = "Educación Artística"
                        },
                        new
                        {
                            MateriaId = 22,
                            CodigoMateria = "C04",
                            GradoAcademicoId = 3,
                            NombreMateria = "Educación Física"
                        },
                        new
                        {
                            MateriaId = 23,
                            CodigoMateria = "C05",
                            GradoAcademicoId = 3,
                            NombreMateria = "Físico Química"
                        },
                        new
                        {
                            MateriaId = 24,
                            CodigoMateria = "C06",
                            GradoAcademicoId = 3,
                            NombreMateria = "Geografía"
                        },
                        new
                        {
                            MateriaId = 25,
                            CodigoMateria = "C07",
                            GradoAcademicoId = 3,
                            NombreMateria = "Historia"
                        },
                        new
                        {
                            MateriaId = 26,
                            CodigoMateria = "C08",
                            GradoAcademicoId = 3,
                            NombreMateria = "Inglés"
                        },
                        new
                        {
                            MateriaId = 27,
                            CodigoMateria = "C09",
                            GradoAcademicoId = 3,
                            NombreMateria = "Matemática"
                        },
                        new
                        {
                            MateriaId = 28,
                            CodigoMateria = "C10",
                            GradoAcademicoId = 3,
                            NombreMateria = "Prácticas del Lenguaje"
                        },
                        new
                        {
                            MateriaId = 29,
                            CodigoMateria = "D01",
                            GradoAcademicoId = 4,
                            NombreMateria = "Matemática"
                        },
                        new
                        {
                            MateriaId = 30,
                            CodigoMateria = "D02",
                            GradoAcademicoId = 4,
                            NombreMateria = "Literatura"
                        },
                        new
                        {
                            MateriaId = 31,
                            CodigoMateria = "D03",
                            GradoAcademicoId = 4,
                            NombreMateria = "Educación Física"
                        },
                        new
                        {
                            MateriaId = 32,
                            CodigoMateria = "D04",
                            GradoAcademicoId = 4,
                            NombreMateria = "Inglés"
                        },
                        new
                        {
                            MateriaId = 33,
                            CodigoMateria = "D05",
                            GradoAcademicoId = 4,
                            NombreMateria = "Salud y Adolescencia"
                        },
                        new
                        {
                            MateriaId = 34,
                            CodigoMateria = "D06",
                            GradoAcademicoId = 4,
                            NombreMateria = "Biología"
                        },
                        new
                        {
                            MateriaId = 35,
                            CodigoMateria = "D07",
                            GradoAcademicoId = 4,
                            NombreMateria = "Historia"
                        },
                        new
                        {
                            MateriaId = 36,
                            CodigoMateria = "D08",
                            GradoAcademicoId = 4,
                            NombreMateria = "Geografía"
                        },
                        new
                        {
                            MateriaId = 37,
                            CodigoMateria = "D09",
                            GradoAcademicoId = 4,
                            NombreMateria = "NTICx"
                        },
                        new
                        {
                            MateriaId = 38,
                            CodigoMateria = "D10",
                            GradoAcademicoId = 4,
                            NombreMateria = "Psicología"
                        },
                        new
                        {
                            MateriaId = 39,
                            CodigoMateria = "E01",
                            GradoAcademicoId = 5,
                            NombreMateria = "Matemática"
                        },
                        new
                        {
                            MateriaId = 40,
                            CodigoMateria = "E02",
                            GradoAcademicoId = 5,
                            NombreMateria = "Literatura"
                        },
                        new
                        {
                            MateriaId = 41,
                            CodigoMateria = "E03",
                            GradoAcademicoId = 5,
                            NombreMateria = "Educación Física"
                        },
                        new
                        {
                            MateriaId = 42,
                            CodigoMateria = "E04",
                            GradoAcademicoId = 5,
                            NombreMateria = "Inglés"
                        },
                        new
                        {
                            MateriaId = 43,
                            CodigoMateria = "E05",
                            GradoAcademicoId = 5,
                            NombreMateria = "Política y Ciudadanía"
                        },
                        new
                        {
                            MateriaId = 44,
                            CodigoMateria = "E06",
                            GradoAcademicoId = 5,
                            NombreMateria = "Introducción a la Química"
                        },
                        new
                        {
                            MateriaId = 45,
                            CodigoMateria = "E07",
                            GradoAcademicoId = 5,
                            NombreMateria = "Comunicación, Cultura y Sociedad"
                        },
                        new
                        {
                            MateriaId = 46,
                            CodigoMateria = "E08",
                            GradoAcademicoId = 5,
                            NombreMateria = "Historia"
                        },
                        new
                        {
                            MateriaId = 47,
                            CodigoMateria = "E09",
                            GradoAcademicoId = 5,
                            NombreMateria = "Geografía"
                        },
                        new
                        {
                            MateriaId = 48,
                            CodigoMateria = "E10",
                            GradoAcademicoId = 5,
                            NombreMateria = "Economía Política"
                        },
                        new
                        {
                            MateriaId = 49,
                            CodigoMateria = "E11",
                            GradoAcademicoId = 5,
                            NombreMateria = "Sociología"
                        },
                        new
                        {
                            MateriaId = 50,
                            CodigoMateria = "F01",
                            GradoAcademicoId = 6,
                            NombreMateria = "Matemática"
                        },
                        new
                        {
                            MateriaId = 51,
                            CodigoMateria = "F02",
                            GradoAcademicoId = 6,
                            NombreMateria = "Literatura"
                        },
                        new
                        {
                            MateriaId = 52,
                            CodigoMateria = "F03",
                            GradoAcademicoId = 6,
                            NombreMateria = "Educación Física"
                        },
                        new
                        {
                            MateriaId = 53,
                            CodigoMateria = "F04",
                            GradoAcademicoId = 6,
                            NombreMateria = "Inglés"
                        },
                        new
                        {
                            MateriaId = 54,
                            CodigoMateria = "F05",
                            GradoAcademicoId = 6,
                            NombreMateria = "Trabajo y Ciudadanía"
                        },
                        new
                        {
                            MateriaId = 55,
                            CodigoMateria = "F06",
                            GradoAcademicoId = 6,
                            NombreMateria = "Proyecto de Investigación en Ciencias Sociales"
                        },
                        new
                        {
                            MateriaId = 56,
                            CodigoMateria = "F07",
                            GradoAcademicoId = 6,
                            NombreMateria = "Historia"
                        },
                        new
                        {
                            MateriaId = 57,
                            CodigoMateria = "F08",
                            GradoAcademicoId = 6,
                            NombreMateria = "Geografía"
                        },
                        new
                        {
                            MateriaId = 58,
                            CodigoMateria = "F09",
                            GradoAcademicoId = 6,
                            NombreMateria = "Arte"
                        },
                        new
                        {
                            MateriaId = 59,
                            CodigoMateria = "F10",
                            GradoAcademicoId = 6,
                            NombreMateria = "Filosofía"
                        });
                });

            modelBuilder.Entity("Entidades.Persona", b =>
                {
                    b.Property<int>("PersonaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonaId"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CodigoPostal")
                        .HasColumnType("int");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("Dni")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Domicilio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaDeNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Localidad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Provincia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SexoId")
                        .HasColumnType("int");

                    b.HasKey("PersonaId");

                    b.HasIndex("SexoId");

                    b.ToTable("Personas");

                    b.HasDiscriminator().HasValue("Persona");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Entidades.Sexo", b =>
                {
                    b.Property<int>("SexoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SexoId"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SexoId");

                    b.ToTable("Sexos");

                    b.HasData(
                        new
                        {
                            SexoId = 1,
                            Codigo = "A1",
                            Nombre = "Masculino"
                        },
                        new
                        {
                            SexoId = 2,
                            Codigo = "A2",
                            Nombre = "Femenino"
                        });
                });

            modelBuilder.Entity("Entidades.TipoDeAsistencia", b =>
                {
                    b.Property<int>("TipoDeAsistenciaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TipoDeAsistenciaId"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TipoDeAsistenciaId");

                    b.ToTable("TiposDeAsistencias");

                    b.HasData(
                        new
                        {
                            TipoDeAsistenciaId = 1,
                            Codigo = "A01",
                            Nombre = "Presente"
                        },
                        new
                        {
                            TipoDeAsistenciaId = 2,
                            Codigo = "A02",
                            Nombre = "Ausente"
                        },
                        new
                        {
                            TipoDeAsistenciaId = 3,
                            Codigo = "A03",
                            Nombre = "Falta justificada"
                        },
                        new
                        {
                            TipoDeAsistenciaId = 4,
                            Codigo = "A04",
                            Nombre = "Retiro"
                        });
                });

            modelBuilder.Entity("Entidades.TipoDeCiclo", b =>
                {
                    b.Property<int>("TipoDeCicloId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TipoDeCicloId"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TipoDeCicloId");

                    b.ToTable("TiposDeCiclos");

                    b.HasData(
                        new
                        {
                            TipoDeCicloId = 1,
                            Codigo = "A01",
                            Nombre = "Ciclo Basico"
                        },
                        new
                        {
                            TipoDeCicloId = 2,
                            Codigo = "A02",
                            Nombre = "Ciclo Superior"
                        });
                });

            modelBuilder.Entity("Entidades.TipoDeExamen", b =>
                {
                    b.Property<int>("TipoDeExamenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TipoDeExamenId"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TipoDeExamenId");

                    b.ToTable("TiposDeExamenes");

                    b.HasData(
                        new
                        {
                            TipoDeExamenId = 1,
                            Codigo = "A01",
                            Nombre = "Parcial"
                        },
                        new
                        {
                            TipoDeExamenId = 2,
                            Codigo = "A02",
                            Nombre = "Recuperatorio"
                        });
                });

            modelBuilder.Entity("Entidades.Trimestre", b =>
                {
                    b.Property<int>("TrimestreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TrimestreId"));

                    b.Property<int>("CicloAcademicoId")
                        .HasColumnType("int");

                    b.Property<int>("DiasTotalesHabiles")
                        .HasColumnType("int");

                    b.Property<int>("NumTrimestre")
                        .HasColumnType("int");

                    b.HasKey("TrimestreId");

                    b.HasIndex("CicloAcademicoId");

                    b.ToTable("Trimestres");
                });

            modelBuilder.Entity("Entidades.Alumno", b =>
                {
                    b.HasBaseType("Entidades.Persona");

                    b.Property<int>("CicloAcademicoId")
                        .HasColumnType("int");

                    b.Property<int>("GradoAcademicoId")
                        .HasColumnType("int");

                    b.HasIndex("CicloAcademicoId");

                    b.HasIndex("GradoAcademicoId");

                    b.HasDiscriminator().HasValue("Alumno");
                });

            modelBuilder.Entity("Entidades.Asistencia", b =>
                {
                    b.HasOne("Entidades.LibroDeAsistencias", "LibroDeAsistencias")
                        .WithMany()
                        .HasForeignKey("LibroDeAsistenciasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entidades.TipoDeAsistencia", "TipoDeAsistencia")
                        .WithMany("Asistencias")
                        .HasForeignKey("TipoDeAsistenciaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LibroDeAsistencias");

                    b.Navigation("TipoDeAsistencia");
                });

            modelBuilder.Entity("Entidades.Boletin", b =>
                {
                    b.HasOne("Entidades.EstadoFinal", "EstadoFinal")
                        .WithMany("Boletines")
                        .HasForeignKey("EstadoFinalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entidades.Alumno", "Alumno")
                        .WithMany("Boletines")
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Alumno");

                    b.Navigation("EstadoFinal");
                });

            modelBuilder.Entity("Entidades.Examen", b =>
                {
                    b.HasOne("Entidades.LibroDeNotas", "LibroDeNotas")
                        .WithMany("Examenes")
                        .HasForeignKey("LibroDeNotasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entidades.Materia", "Materia")
                        .WithMany("Examenes")
                        .HasForeignKey("MateriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entidades.TipoDeExamen", "TipoDeExamen")
                        .WithMany("Examenes")
                        .HasForeignKey("TipoDeExamenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LibroDeNotas");

                    b.Navigation("Materia");

                    b.Navigation("TipoDeExamen");
                });

            modelBuilder.Entity("Entidades.GradoAcademico", b =>
                {
                    b.HasOne("Entidades.TipoDeCiclo", "TipoDeCiclo")
                        .WithMany()
                        .HasForeignKey("TipoDeCicloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoDeCiclo");
                });

            modelBuilder.Entity("Entidades.LibroDeAsistencias", b =>
                {
                    b.HasOne("Entidades.Boletin", "Boletin")
                        .WithOne("LibroDeAsistencias")
                        .HasForeignKey("Entidades.LibroDeAsistencias", "BoletinId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Boletin");
                });

            modelBuilder.Entity("Entidades.LibroDeNotas", b =>
                {
                    b.HasOne("Entidades.Boletin", "Boletin")
                        .WithOne("LibroDeNotas")
                        .HasForeignKey("Entidades.LibroDeNotas", "BoletinId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Boletin");
                });

            modelBuilder.Entity("Entidades.Materia", b =>
                {
                    b.HasOne("Entidades.GradoAcademico", "GradoAcademico")
                        .WithMany()
                        .HasForeignKey("GradoAcademicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GradoAcademico");
                });

            modelBuilder.Entity("Entidades.Persona", b =>
                {
                    b.HasOne("Entidades.Sexo", "Sexo")
                        .WithMany()
                        .HasForeignKey("SexoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sexo");
                });

            modelBuilder.Entity("Entidades.Trimestre", b =>
                {
                    b.HasOne("Entidades.CicloAcademico", "CicloAcademico")
                        .WithMany()
                        .HasForeignKey("CicloAcademicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CicloAcademico");
                });

            modelBuilder.Entity("Entidades.Alumno", b =>
                {
                    b.HasOne("Entidades.CicloAcademico", "CicloAcademico")
                        .WithMany()
                        .HasForeignKey("CicloAcademicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entidades.GradoAcademico", "GradoAcademico")
                        .WithMany()
                        .HasForeignKey("GradoAcademicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CicloAcademico");

                    b.Navigation("GradoAcademico");
                });

            modelBuilder.Entity("Entidades.Boletin", b =>
                {
                    b.Navigation("LibroDeAsistencias")
                        .IsRequired();

                    b.Navigation("LibroDeNotas")
                        .IsRequired();
                });

            modelBuilder.Entity("Entidades.EstadoFinal", b =>
                {
                    b.Navigation("Boletines");
                });

            modelBuilder.Entity("Entidades.LibroDeNotas", b =>
                {
                    b.Navigation("Examenes");
                });

            modelBuilder.Entity("Entidades.Materia", b =>
                {
                    b.Navigation("Examenes");
                });

            modelBuilder.Entity("Entidades.TipoDeAsistencia", b =>
                {
                    b.Navigation("Asistencias");
                });

            modelBuilder.Entity("Entidades.TipoDeExamen", b =>
                {
                    b.Navigation("Examenes");
                });

            modelBuilder.Entity("Entidades.Alumno", b =>
                {
                    b.Navigation("Boletines");
                });
#pragma warning restore 612, 618
        }
    }
}
